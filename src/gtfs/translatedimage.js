// source: gtfs-realtime.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.transit_realtime.TranslatedImage');
goog.provide('proto.transit_realtime.TranslatedImage.LocalizedImage');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transit_realtime.TranslatedImage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 2, proto.transit_realtime.TranslatedImage.repeatedFields_, null);
};
goog.inherits(proto.transit_realtime.TranslatedImage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transit_realtime.TranslatedImage.displayName = 'proto.transit_realtime.TranslatedImage';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.transit_realtime.TranslatedImage.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.transit_realtime.TranslatedImage.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.transit_realtime.TranslatedImage.LocalizedImage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 4, null, null);
};
goog.inherits(proto.transit_realtime.TranslatedImage.LocalizedImage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.transit_realtime.TranslatedImage.LocalizedImage.displayName = 'proto.transit_realtime.TranslatedImage.LocalizedImage';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.extensionsBinary = {};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.transit_realtime.TranslatedImage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transit_realtime.TranslatedImage.prototype.toObject = function(opt_includeInstance) {
  return proto.transit_realtime.TranslatedImage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transit_realtime.TranslatedImage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transit_realtime.TranslatedImage.toObject = function(includeInstance, msg) {
  var f, obj = {
    localizedImageList: jspb.Message.toObjectList(msg.getLocalizedImageList(),
    proto.transit_realtime.TranslatedImage.LocalizedImage.toObject, includeInstance)
  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.transit_realtime.TranslatedImage.extensions, proto.transit_realtime.TranslatedImage.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transit_realtime.TranslatedImage}
 */
proto.transit_realtime.TranslatedImage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transit_realtime.TranslatedImage;
  return proto.transit_realtime.TranslatedImage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transit_realtime.TranslatedImage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transit_realtime.TranslatedImage}
 */
proto.transit_realtime.TranslatedImage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.transit_realtime.TranslatedImage.LocalizedImage;
      reader.readMessage(value,proto.transit_realtime.TranslatedImage.LocalizedImage.deserializeBinaryFromReader);
      msg.addLocalizedImage(value);
      break;
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.transit_realtime.TranslatedImage.extensionsBinary,
        proto.transit_realtime.TranslatedImage.prototype.getExtension,
        proto.transit_realtime.TranslatedImage.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transit_realtime.TranslatedImage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transit_realtime.TranslatedImage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transit_realtime.TranslatedImage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transit_realtime.TranslatedImage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocalizedImageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.transit_realtime.TranslatedImage.LocalizedImage.serializeBinaryToWriter
    );
  }
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.transit_realtime.TranslatedImage.extensionsBinary, proto.transit_realtime.TranslatedImage.prototype.getExtension);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.toObject = function(opt_includeInstance) {
  return proto.transit_realtime.TranslatedImage.LocalizedImage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.transit_realtime.TranslatedImage.LocalizedImage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    mediaType: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    language: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  jspb.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.transit_realtime.TranslatedImage.LocalizedImage.extensions, proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.transit_realtime.TranslatedImage.LocalizedImage}
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.transit_realtime.TranslatedImage.LocalizedImage;
  return proto.transit_realtime.TranslatedImage.LocalizedImage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.transit_realtime.TranslatedImage.LocalizedImage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.transit_realtime.TranslatedImage.LocalizedImage}
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    default:
      jspb.Message.readBinaryExtension(msg, reader,
        proto.transit_realtime.TranslatedImage.LocalizedImage.extensionsBinary,
        proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.getExtension,
        proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.transit_realtime.TranslatedImage.LocalizedImage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.transit_realtime.TranslatedImage.LocalizedImage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  jspb.Message.serializeBinaryExtensions(message, writer,
    proto.transit_realtime.TranslatedImage.LocalizedImage.extensionsBinary, proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.getExtension);
};


/**
 * required string url = 1;
 * @return {string}
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.transit_realtime.TranslatedImage.LocalizedImage} returns this
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.transit_realtime.TranslatedImage.LocalizedImage} returns this
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string media_type = 2;
 * @return {string}
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.getMediaType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.transit_realtime.TranslatedImage.LocalizedImage} returns this
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.setMediaType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.transit_realtime.TranslatedImage.LocalizedImage} returns this
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.clearMediaType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.hasMediaType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string language = 3;
 * @return {string}
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.transit_realtime.TranslatedImage.LocalizedImage} returns this
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.setLanguage = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.transit_realtime.TranslatedImage.LocalizedImage} returns this
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.clearLanguage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.transit_realtime.TranslatedImage.LocalizedImage.prototype.hasLanguage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated LocalizedImage localized_image = 1;
 * @return {!Array<!proto.transit_realtime.TranslatedImage.LocalizedImage>}
 */
proto.transit_realtime.TranslatedImage.prototype.getLocalizedImageList = function() {
  return /** @type{!Array<!proto.transit_realtime.TranslatedImage.LocalizedImage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.transit_realtime.TranslatedImage.LocalizedImage, 1));
};


/**
 * @param {!Array<!proto.transit_realtime.TranslatedImage.LocalizedImage>} value
 * @return {!proto.transit_realtime.TranslatedImage} returns this
*/
proto.transit_realtime.TranslatedImage.prototype.setLocalizedImageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.transit_realtime.TranslatedImage.LocalizedImage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.transit_realtime.TranslatedImage.LocalizedImage}
 */
proto.transit_realtime.TranslatedImage.prototype.addLocalizedImage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.transit_realtime.TranslatedImage.LocalizedImage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.transit_realtime.TranslatedImage} returns this
 */
proto.transit_realtime.TranslatedImage.prototype.clearLocalizedImageList = function() {
  return this.setLocalizedImageList([]);
};


